drop database ChurchSys;
create database ChurchSys;


use ChurchSys;

CREATE TABLE Church (
	
	churchId int NOT NULL AUTO_INCREMENT ,
    
	churchName nvarchar(255),
    
	longitude double,

	latitude double,
    
	tel nvarchar(50),
	address nvarchar(255),
    
	mail nvarchar(255),
    
	startTime time ,
    
	endTime time,
	image nvarchar(255),
    
	description nvarchar (255),
	streamName nvarchar(255),

	streamLink nvarchar(255),
    
	PRIMARY KEY (churchId)

);


create table User(
	
	userId int NOT NULL AUTO_INCREMENT,

   	accountId nvarchar(255),

 	password nvarchar (255),
 
	userName nvarchar(255),   	
    
	role varchar(50),
    
	tel nvarchar (20),
    
	certificate nvarchar(255),
	
	accountNum nvarchar(20),

	enabled bit,
    
	email nvarchar(255),
    
	primary key (userId)

);
create table Ability (

	abilityId int NOT NULL AUTO_INCREMENT,
    
	conductorId int,
    
	subId int,
    
	primary key (abilityId)

);

create table Subject (
	
	subId int NOT NULL AUTO_INCREMENT,
    
	subName nvarchar(255),
    
	categoryId int,
    
	primary key (subId)
   
 
);
create table Category(
	
	categoryId int ,
    
	categoryName nvarchar (255),
    
	primary key (categoryId)

);

create table Room (
	
	roomId int NOT NULL AUTO_INCREMENT,
    
	roomName nvarchar(50),
 
	churchId int,     
    
	roomStatus int,
    
	primary key(roomId)

);

create table Event(
	
	eventId int NOT NULL AUTO_INCREMENT,
    
    	eventName nvarchar(255),
    
	numOfSlot int,
    
	churchId int,
    
	eventStatus int,
    
	examDate date,
    
	subId int,
    
	typeId int,
    
	startDate date,
    
	description nvarchar(255),
    
    	privacy bit,
	isRegistered bit,
    
	primary key (eventId)

);
create table Type (
	
	typeId int NOT NULL AUTO_INCREMENT,
    
	description nvarchar(255),
    
	primary key (typeId)

);
create table Registration (
	
	regisId int NOT NULL AUTO_INCREMENT,
    
	eventId int,
    
	userId int,
    
	churchId int,  
    
	subId int,
       
	regisDate datetime,
    
	regisStatus int,
    
	result int,
    
	message nvarchar (255),
    
	primary key (regisId)

);
CREATE table Post (
	
	postId int NOT NULL AUTO_INCREMENT,
    
	conductorId int,

	title nvarchar (255),    
    
	information nvarchar (255),
	postDate datetime,
    
	isContribute bit,
    
	primary key (postId)

);
create table Slot (
	
	slotId int NOT NULL AUTO_INCREMENT,
	
	eventId int,
    
	roomId int,
    
	conductorId int,
    
    	slotDate date,

	slotStatus int,
	streamLink nvarchar(50),
	streamCode nvarchar(50),
    
	primary key (slotId)    

);

create table SlotHour(

	slotHourId int NOT NULL ,

	slotName nvarchar(50),

	startTime time,

	endTime time,

	primary key (slotHourId)

);

create table Inclusion (
	inclusionId int NOT NULL AUTO_INCREMENT,
	
	slotId int,
	
	slotHourId int,
	
	primary key (inclusionId)
	
);

create table interaction (
	
	interactionId int not null auto_increment,
    
	churchId int,
    
	userId int,
	
	enabled bit,
    
	primary key (interactionId)

);

create table Question (

	
	quesId int NOT NULL AUTO_INCREMENT,
    
	conductorId int,
    
	userId int,
    
	information nvarchar(255),
    
	quesStatus nvarchar(255),
    
	subId int,    
    
	primary key (quesId)

);

create table Contribution(

	contributeId int NOT NULL AUTO_INCREMENT,
    
	userId int,
    
	postId int,	
    
	donate long,
        
	primary key (contributeId)

);

create table RoomCapable (

	roomCapId int NOT NULL AUTO_INCREMENT,
    
	roomId int,
    
	subId int,
    
	primary key (roomCapId)

);

create table Notification (

	notificationId int NOT NULL AUTO_INCREMENT,
    
	userId int,
	avatar nvarchar(255),
    
	type int,
	
	sender nvarchar(255),

	information nvarchar(255),
    
	link nvarchar(255),

	time datetime,

	primary key (notificationId)

);

create table setting(
settingId int NOT NULL auto_increment,

churchId int,

isSync int,

primary key (settingId)
);

alter table setting add foreign key (churchId) references church(churchId);


alter table Subject add foreign key (categoryId) references Category(categoryId);

alter table RoomCapable add foreign key (subId) references Subject(subId);

alter table RoomCapable add foreign key (roomId) references Room(roomId);

alter table Event add foreign key (subId) references Subject(subId);

alter table Event add foreign key (churchId) references church(churchId);

alter table Event add foreign key (typeId) references type (typeId);

alter table Registration add foreign key (eventId) references Event(eventId);

alter table Registration add foreign key (subId) references Subject(subId);

alter table Registration add foreign key (userId) references User(userId);

alter table Registration add foreign key (churchId) references Church(churchId);

alter table Question add foreign key (subId) references Subject (subId);

alter table Question add foreign key (userId) references User (userId);

alter table Question add foreign key (conductorId) references User(userId);

alter table Post add foreign key (conductorId) references User(userId);

alter table Contribution add foreign key (userId) references User (userId);

alter table Contribution add foreign key (postId) references Post(postId);

alter table Slot add foreign key (eventId) references Event(eventId);

alter table Slot add foreign key (roomId) references Room (roomId);

alter table Slot add foreign key (conductorId) references User(userId);

alter table Ability add foreign key (conductorId) references User(userId);

alter table Ability add foreign key (subId) references Subject(subId);

alter table Room add foreign key (churchId) references Church(churchId);

alter table Inclusion add foreign key (slotId) references Slot(slotId);

alter table Inclusion add foreign key (slotHourId) references SlotHour(slotHourId);

alter table Interaction add foreign key (churchId) references Church(churchId);

alter table Interaction add foreign key (userId) references User(userId);

